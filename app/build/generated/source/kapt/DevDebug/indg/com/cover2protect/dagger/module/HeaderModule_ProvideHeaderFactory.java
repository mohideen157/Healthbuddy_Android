// Generated by Dagger (https://google.github.io/dagger).
package indg.com.cover2protect.dagger.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import indg.com.cover2protect.util.HeaderData;

public final class HeaderModule_ProvideHeaderFactory implements Factory<HeaderData> {
  private final HeaderModule module;

  public HeaderModule_ProvideHeaderFactory(HeaderModule module) {
    this.module = module;
  }

  @Override
  public HeaderData get() {
    return provideInstance(module);
  }

  public static HeaderData provideInstance(HeaderModule module) {
    return proxyProvideHeader(module);
  }

  public static HeaderModule_ProvideHeaderFactory create(HeaderModule module) {
    return new HeaderModule_ProvideHeaderFactory(module);
  }

  public static HeaderData proxyProvideHeader(HeaderModule instance) {
    return Preconditions.checkNotNull(
        instance.provideHeader(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
