// Generated by Dagger (https://google.github.io/dagger).
package indg.com.cover2protect.views.activity.home;

import androidx.fragment.app.Fragment;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import indg.com.cover2protect.viewmodel.mainprofileviewmodel.ProfileViewModel;
import javax.inject.Provider;

public final class ProfileActivity_MembersInjector implements MembersInjector<ProfileActivity> {
  private final Provider<DispatchingAndroidInjector<Fragment>>
      fragmentDispatchingAndroidInjectorProvider;

  private final Provider<ProfileViewModel> viewModelProvider;

  public ProfileActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatchingAndroidInjectorProvider,
      Provider<ProfileViewModel> viewModelProvider) {
    this.fragmentDispatchingAndroidInjectorProvider = fragmentDispatchingAndroidInjectorProvider;
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<ProfileActivity> create(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentDispatchingAndroidInjectorProvider,
      Provider<ProfileViewModel> viewModelProvider) {
    return new ProfileActivity_MembersInjector(
        fragmentDispatchingAndroidInjectorProvider, viewModelProvider);
  }

  @Override
  public void injectMembers(ProfileActivity instance) {
    injectFragmentDispatchingAndroidInjector(
        instance, fragmentDispatchingAndroidInjectorProvider.get());
    injectViewModel(instance, viewModelProvider.get());
  }

  public static void injectFragmentDispatchingAndroidInjector(
      ProfileActivity instance,
      DispatchingAndroidInjector<Fragment> fragmentDispatchingAndroidInjector) {
    instance.fragmentDispatchingAndroidInjector = fragmentDispatchingAndroidInjector;
  }

  public static void injectViewModel(ProfileActivity instance, ProfileViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
