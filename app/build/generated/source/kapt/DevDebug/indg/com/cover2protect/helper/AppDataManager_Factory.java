// Generated by Dagger (https://google.github.io/dagger).
package indg.com.cover2protect.helper;

import dagger.internal.Factory;
import indg.com.cover2protect.presenter.PreferencesHelper;
import javax.inject.Provider;

public final class AppDataManager_Factory implements Factory<AppDataManager> {
  private final Provider<PreferencesHelper> preferencesHelperProvider;

  public AppDataManager_Factory(Provider<PreferencesHelper> preferencesHelperProvider) {
    this.preferencesHelperProvider = preferencesHelperProvider;
  }

  @Override
  public AppDataManager get() {
    return provideInstance(preferencesHelperProvider);
  }

  public static AppDataManager provideInstance(
      Provider<PreferencesHelper> preferencesHelperProvider) {
    return new AppDataManager(preferencesHelperProvider.get());
  }

  public static AppDataManager_Factory create(
      Provider<PreferencesHelper> preferencesHelperProvider) {
    return new AppDataManager_Factory(preferencesHelperProvider);
  }

  public static AppDataManager newAppDataManager(PreferencesHelper preferencesHelper) {
    return new AppDataManager(preferencesHelper);
  }
}
