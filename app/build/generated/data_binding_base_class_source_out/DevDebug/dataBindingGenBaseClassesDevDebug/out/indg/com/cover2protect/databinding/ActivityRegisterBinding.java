// Generated by data binding compiler. Do not edit!
package indg.com.cover2protect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.rilixtech.CountryCodePicker;
import indg.com.cover2protect.R;
import indg.com.cover2protect.presenter.Presenter;
import indg.com.cover2protect.presenter.RegisterPresenter;
import indg.com.cover2protect.util.ripple.FButton;
import indg.com.cover2protect.viewmodel.registerviewmodel.RegisterViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityRegisterBinding extends ViewDataBinding {
  @NonNull
  public final CountryCodePicker ccp;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etMobile;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final EditText etUsername;

  @NonNull
  public final FButton register;

  @NonNull
  public final Spinner spinner1;

  @NonNull
  public final Spinner spinner2;

  @Bindable
  protected RegisterViewModel mViewModel;

  @Bindable
  protected RegisterPresenter mPresenter;

  @Bindable
  protected Presenter mLoginpresenter;

  protected ActivityRegisterBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CountryCodePicker ccp, EditText etEmail, EditText etMobile, EditText etPassword,
      EditText etUsername, FButton register, Spinner spinner1, Spinner spinner2) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ccp = ccp;
    this.etEmail = etEmail;
    this.etMobile = etMobile;
    this.etPassword = etPassword;
    this.etUsername = etUsername;
    this.register = register;
    this.spinner1 = spinner1;
    this.spinner2 = spinner2;
  }

  public abstract void setViewModel(@Nullable RegisterViewModel viewModel);

  @Nullable
  public RegisterViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setPresenter(@Nullable RegisterPresenter presenter);

  @Nullable
  public RegisterPresenter getPresenter() {
    return mPresenter;
  }

  public abstract void setLoginpresenter(@Nullable Presenter loginpresenter);

  @Nullable
  public Presenter getLoginpresenter() {
    return mLoginpresenter;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_register, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityRegisterBinding>inflateInternal(inflater, R.layout.activity_register, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_register, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityRegisterBinding>inflateInternal(inflater, R.layout.activity_register, null, false, component);
  }

  public static ActivityRegisterBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityRegisterBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityRegisterBinding)bind(component, view, R.layout.activity_register);
  }
}
